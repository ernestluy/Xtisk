/* SQLEditor (SQLite)*/


CREATE TABLE IM_DISCUSSION_ROOM
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
roomId TEXT ,
serverRoomID INTEGER,
createrUserID INTEGER,
roomName TEXT,
createdDateTime TEXT,
isActive INTEGER,
isTopMost INTEGER,
loginUserCode  TEXT,
lastMessageSentDate TEXT,
unreadMessageCount INTEGER
);

CREATE TABLE IM_DISCUSSION_ROOM_MEMBERS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
roomId TEXT ,
accountId TEXT ,
joinDate TEXT,
userName TEXT,
isActive INTEGER
);


CREATE TABLE IM_DISCUSSION_ROOM_MESSAGE
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
messageId TEXT ,
roomId TEXT,
senderId TEXT,
sendTime TEXT,
receiveTime TEXT,
message TEXT,
attachmentId TEXT,
attachmentFormat TEXT,
bRead INTEGER,
bSaved INTEGER,
recordId TEXT,
messageType INTEGER,
dataSendStatus INTEGER
);

CREATE TABLE IM_CHAT_MESSAGE
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
messageId TEXT,
senderId TEXT,
receiverId TEXT,
sendTime TEXT,
receiveTime TEXT,
message TEXT,
messageLength INTEGER,
attachmentId TEXT,
attachmentFormat TEXT,
attachmentSize INTEGER,
bRead INTEGER,
bSaved INTEGER,
recordId TEXT,
conversationId TEXT REFERENCES IM_CHAT_CONVERSATION (conversationId),
messageType INTEGER,
dataSendStatus INTEGER,
iChildFromNO TEXT,
fromNoType INTEGER,
iFromNo INTEGER
);

CREATE TABLE IM_CHAT_CONVERSATION
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
conversationId TEXT UNIQUE,
lastMessageSentDate TEXT,
unreadMessageCount TEXT,
messagesLength INTEGER,
senderId TEXT REFERENCES PIM_USER (USER_ID),
receiverId TEXT REFERENCES PIM_USER (USER_ID),
sentDate TEXT,
isActive INTEGER,
loginUserCode  TEXT,
iFromNo  INTEGER,
fromNoType INTEGER
);

CREATE TABLE PIM_CUSTOM_GROUP
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
GROUP_ID TEXT UNIQUE,
MEMO TEXT,
ACCESS_TYPE INTEGER,
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
INDEX_SORT TEXT,
HIDDEN_LEDER_INFO INTEGER
);

CREATE TABLE PIM_FRIENDS_GROUP
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
GROUP_ID TEXT UNIQUE,
NAME TEXT,
MEMO TEXT,
ACCESS_TYPE INTEGER,
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT,
RELATIONSHIP TEXT
);

CREATE TABLE PIM_ORG_GROUP_RALATIONS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
USER_ID TEXT,
GROUP_ID TEXT,
ORG_ID TEXT
);

CREATE TABLE PIM_ORGANIZATION
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
ORG_ID TEXT UNIQUE,
ENABLED INTEGER,
INDEX_SORT TEXT,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT
);

CREATE TABLE PIM_ORG_GROUPS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
ORG_GROUP_ID TEXT,
MEMBER_ID TEXT,
MEMBER_TYPE INTEGER,
GROUP_ID TEXT ,
ORG_ID TEXT REFERENCES PIM_ORGANIZATION (ORG_ID),
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT
);

CREATE TABLE PIM_USER
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
USER_ID TEXT UNIQUE,
EMPLOYEE_ID TEXT,
TYPE INTEGER,
GENDER TEXT,
HEAD_ICON TEXT,
MEMO TEXT,
IMAGE INTEGER,
ENABLED INTEGER,
USER_INDEX INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT,
INDEX_SORT TEXT,
IS_LEADER INTEGER,
SIGNATURE TEXT,
ORG_GROUP_ID TEXT REFERENCES PIM_ORG_GROUPS (GROUP_ID),
FRIEND_GROUP_ID TEXT REFERENCES PIM_FRIENDS_GROUP (GROUP_ID)
);

CREATE TABLE PIM_CUSTOM_GROUP_MEMBERS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
USER_ID TEXT REFERENCES PIM_USER (USER_ID),
GROUP_ID TEXT REFERENCES PIM_CUSTOM_GROUP (GROUP_ID),
TYPE INTEGER,
ENABLED INTEGER
);

CREATE TABLE PIM_FRIENDS_GROUP_MEMBERS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
USER_ID TEXT REFERENCES PIM_USER (USER_ID),
GROUP_ID TEXT REFERENCES PIM_FRIENDS_GROUP (GROUP_ID),
OWNER TEXT,
TYPE INTEGER,
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT,
RELATIONSHIP TEXT
);


CREATE TABLE PIM_NAME_CARD
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
NAME_CARD_ID TEXT,
USER_ID TEXT REFERENCES PIM_USER (USER_ID),
FULL_NAME TEXT,
PINYIN_NAME TEXT,
PINYIN_NIMENICK TEXT,
INDEX_LETTER TEXT,
GENDER TEXT,
COMPANY_NAME TEXT,
DEPARTMENT TEXT,
POSITION TEXT,
TITLE TEXT,
MEMO TEXT,
ACCESS_TYPE TEXT,
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT,
RELATIONSHIP TEXT
);

CREATE TABLE PIM_UCM_CONTACT
(
id INTEGER,
USER_ID TEXT REFERENCES PIM_USER (USER_ID),
ACCOUNT_ID TEXT,
DAS_ACCOUNT_ID TEXT,
IS_DAS_ACCOUNT INTEGER,
SOFT_CODE TEXT,
ENABLED INTEGER,
CREATED_BY TEXT,
CREATED_DATE TEXT,
LAST_UPDATED_BY TEXT,
LAST_UPDATED_DATE TEXT,
id_1 INTEGER,
PRIMARY KEY (id,id_1)
);

CREATE TABLE USER_ADDRESS
(
id INTEGER PRIMARY KEY  AUTOINCREMENT,
ADDRESS_ID TEXT,
OWNER  TEXT,
USER_ID TEXT REFERENCES PIM_USER (USER_ID),
NAME_CARD_ID		varchar(40) ,
PRIORITY			smallint default 0,
CONTENT				varchar(200) ,
MEMO				varchar(4000),
TYPE INTEGER,
WORK_PLACE TEXT,
POSITION TEXT,
ENABLED INTEGER
);


create table SYNC_RESULT(
	_id				     INTEGER primary key autoincrement,
	RESPONSE			 varchar(40)    not null,
	ACCOUNT_ID           varchar(20) ,
	RESULT				 smallint       not null default 0,
	MESSAGE				 varchar(40),
	SYNC_TIMESTAMP		 varchar(20)
);

create table PIM_CONTACT(
	_id					 INTEGER primary key autoincrement,
   	CONTACT_ID           varchar(100) not null,
	USER_ID				 varchar(40) not null ,
   	TYPE                 smallint not null default 0 ,
	CONTENT              varchar(200) ,
	COUNTRY_CODE         varchar(10),
	AREA_CODE            varchar(10),
   	EXTENSION            varchar(10),
   	ENABLED              smallint not null default 1  ,
   	PRIORITY             varchar(200) ,
   	CREATED_BY           varchar(40) ,
   	CREATED_DATE         varchar(20) ,
   	LAST_UPDATED_BY      varchar(40),
   	LAST_UPDATED_DATE    varchar(20)
);
create table CONFERENCES(
    _id                     INTEGER primary key autoincrement,
    title                   TEXT,
    subTitle                TEXT,
    type                    smallint,
    enabled                 smallint not null default 1  ,
    createdBy               TEXT ,
    createdDate             TEXT,
    loginUserCode           TEXT
);

create table PHONE_RECORD(
    _id                     INTEGER primary key autoincrement,
    account_id              TEXT,
    name                    TEXT,
    time                    TEXT,
    phone_number            TEXT ,
    call_type               smallint not null default 1 ,
    duration                INTEGER,
    is_member               INTEGER,
    user_id                 TEXT
);
create table CALL_DATE_RECORD(
    _id                     INTEGER primary key autoincrement,
    name                    TEXT,
    time                    INTEGER,
    user_id                 TEXT
);
/*ishekou*/
create table MSG_ITEM(
_id                     INTEGER primary key autoincrement,
name                    TEXT,
time                    INTEGER,
user_id                 TEXT
);